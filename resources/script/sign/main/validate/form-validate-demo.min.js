/*$.validator.setDefaults({
	ignore: ":hidden:not(select)",
	highlight: function(e) {
		$(e).closest(".form-group").removeClass("has-success").addClass("has-error")
	},
	success: function(e) {
		e.closest(".form-group").removeClass("has-error").addClass("has-success")
	},
	errorElement: "span",
	errorPlacement: function(e, r) {
		e.appendTo(r.is(":radio") || r.is(":checkbox") ? r.parent().parent().parent() : r.parent())
	},
	errorClass: "help-block m-b-none",
	validClass: "help-block m-b-none"
})*/

if ($.validator) {
	$.validator.setDefaults({
		ignore: ":hidden:not(select)",
		highlight : function(element) {
			$(element).closest('.form-group').removeClass('has-success').addClass('has-error');
		},
		success : function(label, element) {
			$(element).closest('.form-group').removeClass('has-error').addClass('has-success');
		},
		errorElement : "span",
		errorPlacement : function(error, element) {
			// 隐藏错误信息
			if (element.is(":radio") || element.is(":checkbox")) {
				error.appendTo(element.parent().parent().parent());
			} else {
				error.appendTo(element.parent());
			}
		},
		errorClass : "help-block m-b-none",
		validClass : "help-block m-b-none"
	});
	
      $.validator.prototype.elements = function () {
               var validator = this,
                 rulesCache = {};
 
               // select all valid inputs inside the form (no submit or reset buttons)
       return $(this.currentForm)
       .find("input, select, textarea")
       .not(":submit, :reset, :image, [disabled]")
       .not(this.settings.ignore)
       .filter(function () {
           if (!this.name && validator.settings.debug && window.console) {
               console.error("%o has no name assigned", this);
           }
           //注释这行代码
           // select only the first element for each name, and only those with rules specified
           //if ( this.name in rulesCache || !validator.objectLength($(this).rules()) ) {
           //    return false;
           //}
               rulesCache[this.name] = true;
               return true;
           });
       }
   }